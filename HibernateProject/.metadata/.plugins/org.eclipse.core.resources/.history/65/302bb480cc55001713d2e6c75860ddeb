package savagaborov.hibernate;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.boot.MetadataSources;
import org.hibernate.boot.registry.StandardServiceRegistry;
import org.hibernate.boot.registry.StandardServiceRegistryBuilder;

public class TicketManager {
	
	protected SessionFactory sessionFactory;
	
	protected void setup() {
		final StandardServiceRegistry registry = new StandardServiceRegistryBuilder()
				.configure() // configures																					// hibernate.cfg.xml
				.build();
		try {
			sessionFactory = new MetadataSources(registry).buildMetadata().buildSessionFactory();
		} catch (Exception e) {
			e.printStackTrace();
			StandardServiceRegistryBuilder.destroy(registry);
		}
	}
	
	protected void exit() {
		sessionFactory.close();
	}
	
	//create operation
	protected void create() {
		
		Ticket ticket = new Ticket();
		
		ticket.setEvent("World Cup Russia 2018");
		ticket.setType("Sport");
		ticket.setPrice(115.33f);

		Session session = sessionFactory.openSession();
		session.beginTransaction();

		session.save(ticket);

		session.getTransaction().commit();
		session.close();
	}
	
	// read operation
	protected void read() {

		Session session = sessionFactory.openSession();
		
		long ticketId = 1;
		Ticket ticket = session.get(Ticket.class, ticketId); // prvi argument je klasa,
															// a drugi je ID objekta
		if (ticket != null) {
			System.out.println("Event " + ticket.getEvent());
			System.out.println("Type " + ticket.getType());
			System.out.println("Price " + ticket.getPrice());
		} else {
			System.out.println("Ticket could not be found");
		}

			session.close();
		}

	public static void main(String[] args) {
		
		TicketManager manager = new TicketManager();
		
		manager.setup();
		
		manager.create();
		manager.read();
		
		manager.exit();

	}

}
